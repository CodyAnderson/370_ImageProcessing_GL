#version 130

// Interpolated values from the vertex shaders
in vec2 UV;

// Ouput data
out vec4 FragmentColor;
 
uniform float offset[5] = float[]( 0.0, 1.0, 2.0, 3.0, 4.0 );
uniform float weight[5] = float[]( 0.2270270270, 0.1945945946, 0.1216216216,
                                   0.0540540541, 0.0162162162 );

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform int shaderflag;

void main(){

	// Output color = color of the texture at the specified UV
	FragmentColor = texture( myTextureSampler, UV ).rgba;

	//int flag = shaderflag;
	
	if ( (shaderflag & int(2)) == int(2))
	{
	    FragmentColor = texture( myTextureSampler, vec2(gl_FragCoord)/1024.0 ) * weight[0];
	    for (int i=1; i<5; i++) {
	        FragmentColor +=
	            texture( myTextureSampler, ( vec2(gl_FragCoord)+vec2(0.0, offset[i]) )/1024.0 )
	                * weight[i];
	        FragmentColor +=
	            texture( myTextureSampler, ( vec2(gl_FragCoord)-vec2(0.0, offset[i]) )/1024.0 )
	                * weight[i];
	    }
	}

	if ( (shaderflag & int(1)) == int(1))
	{
		FragmentColor = vec4( 1.0 -FragmentColor.r, 1.0 -FragmentColor.g, 1.0 -FragmentColor.b, 1.0);
	}	
}